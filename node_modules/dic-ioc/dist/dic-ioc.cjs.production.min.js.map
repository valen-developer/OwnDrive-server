{"version":3,"file":"dic-ioc.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["export class IOC {\n  private services: any;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.services = {};\n  }\n\n  /**\n   *\n   * @param name name of service\n   * @param factory Service Creator. Ex: (c)=> new UserCreator(c.get('userRepository'))\n   */\n  public setService(name: string, factory: (c: IOC) => {}) {\n    if (!this.services[name]) this.services[name] = factory(this);\n  }\n\n  /**\n   *\n   * @param name name of service to get. return that service if exits\n   */\n  public get(name: string): any {\n    if (!this.services[name]) throw new Error(`not that service: ${name}`);\n    return this.services[name];\n  }\n}\n"],"names":["services","setService","name","factory","this","get","Error"],"mappings":"6GAOSA,SAAW,8BAQXC,WAAA,SAAWC,EAAcC,GACzBC,KAAKJ,SAASE,KAAOE,KAAKJ,SAASE,GAAQC,EAAQC,UAOnDC,IAAA,SAAIH,OACJE,KAAKJ,SAASE,GAAO,MAAM,IAAII,2BAA2BJ,UACxDE,KAAKJ,SAASE"}